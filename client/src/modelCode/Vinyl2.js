/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { Plane } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import "../App.css"

function changePointer(hover){
  if(hover){
    document.body.style.cursor = "pointer"
  } else {
    document.body.style.cursor = "auto"
  }
}

function testClicked(vinilPlay,setVinylPlay){
  setVinylPlay(!vinilPlay);
}

export function Model2({vinylPlay,setVinylPlay,props}) {
  const animationSpeed = 0.04;
  const [clicked, setClicked] = useState(false);
  const [hover, setHover] = useState(false);
  const ref = useRef();
  const refDisk = useRef();
  const refDiskSupport = useRef();
  let num;
  
  
  useFrame((state,delta) => {
    num = (ref.current.rotation.y)
    
    // pivot rotation to disk
    if(clicked && ref.current.rotation.y < 0.7){
        ref.current.rotation.y += animationSpeed
    }

    // pivotX rotation
    if(num.toFixed(2) == 0.70){
      ref.current.rotation.x = Math.PI + 0.09
    } else {
      ref.current.rotation.x = Math.PI
    }
    // pivot rotation to 0
    if(!clicked && ref.current.rotation.y > 0 ){
      ref.current.rotation.y -= animationSpeed
    }
    // diskSupport and disk rotation
    if(clicked && num.toFixed(2) == 0.70){
      refDisk.current.rotation.y += animationSpeed - 0.02
      refDiskSupport.current.rotation.y += animationSpeed - 0.02;
    }
  },[clicked])

  const { nodes, materials } = useGLTF('/vinyl2.glb')
  return (
    <group castShadow {...props} dispose={null}>
      <group ref={refDisk} position={[0, 0, 0]}>
        <mesh geometry={nodes.Mesh_1.geometry} material={materials.Record} />
        <mesh geometry={nodes.Mesh_2.geometry} material={materials.Label} />
        <mesh geometry={nodes.Text021.geometry} material={materials.Record} position={[0, 0.01, -0.1]} scale={0.54} />
      <mesh geometry={nodes.Text024.geometry} material={materials.Record} position={[-0.2, 0.01, 0.1]} />
      </group>

      <group ref={refDiskSupport} position={[0, -0.04, 0]}>
        <mesh geometry={nodes.Cylinder002.geometry} material={materials.TurntableRubber} />
        <mesh geometry={nodes.Cylinder002_1.geometry} material={materials.TurnTableMetal} />
      </group>
      {/* <pointLight intensity={300} decay={2} position={[-3.55, 1.1, -2.94]} rotation={[-1.84, 0.6, 1.93]} /> */}
      <PerspectiveCamera makeDefault={false} far={100} near={0.1} fov={31.08} position={[-2.97, 5.39, 5.48]} rotation={[-0.8, -0.4, -0.38]} />
      {/* <pointLight intensity={0.2} decay={2} color="#ff3309" position={[0.92, 1, -2.75]} rotation={[-1.84, 0.6, 1.93]} /> */}
      {/* <pointLight intensity={0.2} decay={2} color="#197aff" position={[-2.6, 1.1, 0.88]} rotation={[-1.84, 0.6, 1.93]} /> */}
      <pointLight intensity={2} decay={2} position={[2.04, 1.41, 1.7]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={2} decay={2} position={[-0.79, 1.04, 0.92]} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Spindle.geometry} material={materials.SpindleMetal} />
      <mesh castShadow geometry={nodes.Record_Player_Body.geometry} material={materials['Record Player']} position={[0.22, -0.36, 0.17]} />
      <mesh geometry={nodes.VolumeKnob.geometry} material={materials.VolumeKnob} position={[1.39, -0.2, 0.7]} />
      <mesh ref={ref} onPointerOver={() => {setHover(false);changePointer(hover)}} onPointerLeave={() =>{setHover(true);changePointer(hover)}} onClick={() => {setClicked(!clicked);testClicked(vinylPlay,setVinylPlay)}} geometry={nodes.ArmPivot.geometry} material={materials.TurnTableMetal} position={[1.39, 0.01, -0.56]} rotation={[-Math.PI, 0, 0]}>
        <group position={[0, -0.07, -0.26]} rotation={[1.49, 0, 0]}>
          <mesh geometry={nodes.Cylinder004.geometry} material={materials.VolumeKnob} />
          <mesh geometry={nodes.Cylinder004_1.geometry} material={materials.TurnTableMetal} />
        </group>
      </mesh>
      <mesh geometry={nodes.SPINNYBOI_4000.geometry} material={materials.LogoText} position={[-1.25, -0.15, 1.47]} />
      {/* <mesh receiveShadow geometry={nodes.Plane.geometry} material={materials.tABLE} position={[0, -0.43, 0]} /> */}
      <Plane castShadow receiveShadow position={[0, -0.43, 0]} rotation={[-Math.PI/2,0,0]} scale={30} >
        <meshStandardMaterial color="gray" roughness={0.27}/>
      </Plane>
    </group>
  )
}

useGLTF.preload('/vinyl2.glb')
